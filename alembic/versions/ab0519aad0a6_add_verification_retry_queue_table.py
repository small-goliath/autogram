"""Add verification_retry_queue table

Revision ID: ab0519aad0a6
Revises: 001
Create Date: 2025-10-31 15:39:47.861264

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ab0519aad0a6'
down_revision: Union[str, None] = '001'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('verification_retry_queue',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('instagram_link', sa.String(length=500), nullable=False),
    sa.Column('shortcode', sa.String(length=50), nullable=False),
    sa.Column('batch_type', sa.String(length=20), nullable=False, comment='verify 또는 cleanup'),
    sa.Column('link_owner_username', sa.String(length=50), nullable=True, comment='verify 배치의 경우 링크 소유자'),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('last_error_message', sa.Text(), nullable=True),
    sa.Column('last_attempt_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False, comment='pending, processing, completed, failed'),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_verification_retry_queue_shortcode', 'verification_retry_queue', ['shortcode'], unique=False)
    op.create_index('idx_verification_retry_queue_status_batch', 'verification_retry_queue', ['status', 'batch_type'], unique=False)
    op.create_index(op.f('ix_verification_retry_queue_instagram_link'), 'verification_retry_queue', ['instagram_link'], unique=False)
    op.create_index(op.f('ix_verification_retry_queue_shortcode'), 'verification_retry_queue', ['shortcode'], unique=False)
    op.create_index(op.f('ix_verification_retry_queue_status'), 'verification_retry_queue', ['status'], unique=False)

    # Partial unique index: shortcode + batch_type은 pending/processing 상태에서만 유니크
    op.execute("""
        CREATE UNIQUE INDEX idx_unique_pending_shortcode_batch
        ON verification_retry_queue (shortcode, batch_type)
        WHERE status IN ('pending', 'processing')
    """)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP INDEX IF EXISTS idx_unique_pending_shortcode_batch")
    op.drop_index(op.f('ix_verification_retry_queue_status'), table_name='verification_retry_queue')
    op.drop_index(op.f('ix_verification_retry_queue_shortcode'), table_name='verification_retry_queue')
    op.drop_index(op.f('ix_verification_retry_queue_instagram_link'), table_name='verification_retry_queue')
    op.drop_index('idx_verification_retry_queue_status_batch', table_name='verification_retry_queue')
    op.drop_index('idx_verification_retry_queue_shortcode', table_name='verification_retry_queue')
    op.drop_table('verification_retry_queue')
    # ### end Alembic commands ###
